@startuml
skinparam classAttributeIconSize 0
skinparam shadowing false
skinparam linetype ortho

' Core Interfaces
interface IProblemSolution
note right of IProblemSolution
Represents IProblemSolution<TInput, TOutput>
Defines the Solve(input) method
end note

interface IProblemStrategy
note right of IProblemStrategy
Represents IProblemStrategy<TInput, TOutput>
Wraps a solution with metadata
end note

interface ITestCaseProvider
note right of ITestCaseProvider
Provides test cases for a given problem
end note

' Strategy Wrapper
class ProblemStrategy implements IProblemStrategy {
    - Name: string
    - Implementation: IProblemSolution
}

' Strategy Implementations
class TwoSumSortedSolution implements IProblemSolution
class TwoSumBinarySearchSolution implements IProblemSolution
class TwoSumSolution implements IProblemSolution

' Test Harness
class ProblemTest {
    - Solve: Func
    - Compare: Func
    + RunTests(testCases: List)
}
note right of ProblemTest
Template method for executing test cases
end note

' Factories
class ProblemStrategyFactory {
    + GetTwoSumStrategies(): IEnumerable
    + GetTwoSumSortedStrategies(): IEnumerable
}

class ProblemTestCaseFactory {
    + GetTwoSumTestCases(): ITestCaseProvider
    + GetTwoSumSortedTestCases(): ITestCaseProvider
}

' Models
class TwoSumInput {
    - Numbers: int[]
    - Target: int
    + ToString(): string
}

class TwoSumSortedInput {
    - Numbers: int[]
    - Target: int
    + ToString(): string
}

' Dispatcher
class Program {
    + Main()
    - RunProblem(type: ProblemType)
    - RunTestSuite()
}

enum ProblemType {
    TwoSum
    TwoSumSorted
    ThreeSum
}

' Relationships
Program --> ProblemType
Program --> ProblemStrategyFactory
Program --> ProblemTestCaseFactory
Program --> ProblemTest

ProblemStrategyFactory --> ProblemStrategy
ProblemTestCaseFactory --> ITestCaseProvider
ProblemTest --> IProblemStrategy
ProblemTest --> TestCase
ProblemStrategy --> IProblemSolution
TwoSumSortedSolution --> IProblemSolution
TwoSumBinarySearchSolution --> IProblemSolution
TwoSumSolution --> IProblemSolution

@enduml